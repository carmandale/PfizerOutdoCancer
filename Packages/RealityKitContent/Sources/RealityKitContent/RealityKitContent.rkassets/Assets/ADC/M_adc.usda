#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.16.0.3)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "Root"
{
    quatf xformOp:orient = (1, 0, 0, 0)
    float3 xformOp:scale = (1, 1, 1)
    float3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def Material "ADC_002"
    {
        token inputs:frame:stPrimvarName = "st" (
            customData = {
                dictionary realitykit = {
                    bool hide = 1
                }
            }
        )
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/ADC_002/Principled_BSDF.outputs:surface>
        custom string userProperties:blender:data_name = "ADC_002"

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            color3f inputs:diffuseColor.connect = </Root/ADC_002/diffuseColor.outputs:rgb>
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.5
            float inputs:metallic = 0
            normal3f inputs:normal.connect = </Root/ADC_002/normal.outputs:rgb>
            float inputs:opacity = 1
            float inputs:roughness.connect = </Root/ADC_002/roughness.outputs:r>
            float inputs:specular = 0.5
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @./textures/ADC_BaseColor.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </Root/ADC_002/UV_Map.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "UV_Map"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            string inputs:varname = "st"
            float2 outputs:result
        }

        def Shader "Image_Texture_001"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @./textures/ADC_Roughness.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </Root/ADC_002/UV_Map.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float outputs:r
        }

        def Shader "Image_Texture_002"
        {
            uniform token info:id = "UsdUVTexture"
            float4 inputs:bias = (-1, -1, -1, -1)
            asset inputs:file = @./textures/ADC_Normal.png@
            float4 inputs:scale = (2, 2, 2, 2)
            token inputs:sourceColorSpace = "raw"
            float2 inputs:st.connect = </Root/ADC_002/UV_Map.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../Assets/ADC/textures/ADC_BaseColor.png@
            float2 inputs:st.connect = </Root/ADC_002/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/ADC_002.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }

        def Shader "roughness"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../Assets/ADC/textures/ADC_Roughness.png@
            float2 inputs:st.connect = </Root/ADC_002/roughness/TexCoordReader.outputs:result>
            float outputs:r

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/ADC_002.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }

        def Shader "normal"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../Assets/Lab/Objects/textures/ADC_Normal.png@
            float2 inputs:st.connect = </Root/ADC_002/normal/TexCoordReader.outputs:result>
            normal3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/ADC_002.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }
}

