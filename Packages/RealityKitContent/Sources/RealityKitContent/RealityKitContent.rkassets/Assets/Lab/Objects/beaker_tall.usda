#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.2.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Scope "_materials"
    {
        def Material "flasks_mat"
        {
            token outputs:surface.connect = </root/_materials/flasks_mat/Principled_BSDF.outputs:surface>
            custom string userProperties:blender:data_name = "flasks_mat"

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/flasks_mat/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic.connect = </root/_materials/flasks_mat/Image_Texture_001.outputs:r>
                float3 inputs:normal.connect = </root/_materials/flasks_mat/Image_Texture_004.outputs:rgb>
                float inputs:opacity.connect = </root/_materials/flasks_mat/Image_Texture_003.outputs:r>
                float inputs:roughness.connect = </root/_materials/flasks_mat/Image_Texture_002.outputs:r>
                float inputs:specular = 0.5
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/flasks_mat_BaseColor.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/flasks_mat/Mapping.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "Mapping"
            {
                uniform token info:id = "UsdTransform2d"
                float2 inputs:in.connect = </root/_materials/flasks_mat/UV_Map.outputs:result>
                float inputs:rotation = 0
                float2 inputs:scale = (1, 1)
                float2 inputs:translation = (0, 0)
                float2 outputs:result
            }

            def Shader "UV_Map"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                string inputs:varname = "st"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/flasks_mat_Metallic.jpg@
                token inputs:sourceColorSpace = "raw"
                float2 inputs:st.connect = </root/_materials/flasks_mat/Mapping.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float outputs:r
            }

            def Shader "Image_Texture_002"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/flasks_mat_Roughness.jpg@
                token inputs:sourceColorSpace = "raw"
                float2 inputs:st.connect = </root/_materials/flasks_mat/Mapping.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float outputs:r
            }

            def Shader "Image_Texture_003"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/flasks_mat_opacity.jpg@
                token inputs:sourceColorSpace = "raw"
                float2 inputs:st.connect = </root/_materials/flasks_mat/Mapping.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float outputs:r
            }

            def Shader "Image_Texture_004"
            {
                uniform token info:id = "UsdUVTexture"
                float4 inputs:bias = (-1, -1, -1, -1)
                asset inputs:file = @./textures/flasks_mat_Normal.jpg@
                float4 inputs:scale = (2, 2, 2, 2)
                token inputs:sourceColorSpace = "raw"
                float2 inputs:st.connect = </root/_materials/flasks_mat/Mapping.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }

    def "beaker" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        prepend references = @../Object_upgrades/Beaker/beaker.usdc@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.7351549, 0.735, 1.074)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

