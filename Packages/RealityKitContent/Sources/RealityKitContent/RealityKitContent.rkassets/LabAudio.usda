#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.16.0.3)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["AUDIO_transforms", "AudioMixGroups", "keyboards", "MasterAudio", "RCP_BehaviorsContainer", "OnAddedToScene", "Keyboard", "Computer_wav", "Filing_Cabinet_wav", "Vent_Hood_wav", "Beaker_Stir_wav", "Room_Ambience_Quad_wav", "Conversation_1_wav", "Conversation_2_wav", "conversation", "Paperwork_1_wav", "Paperwork_2_wav", "Printer_1_wav", "venthood", "paperwork", "computer_printer_filingCabinet", "Ambience", "AmbientAudio", "ADC_wav", "_3D_people_scene", "podcastVO"]
    quatf xformOp:orient = (1, 0, 0, 0)
    float3 xformOp:scale = (1, 1, 1)
    float3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def Xform "AUDIO_transforms" (
        active = true
    )
    {
        reorder nameChildren = ["Keyboard1", "Keyboard2", "Beaker", "Paperwork1", "Paperwork1_1", "Beaker_1", "Keyboard3", "Keyboard4", "Keyboard5", "conversation", "conversation2", "ventHood", "computer1", "printer", "filingCabinet", "podcast_1", "podcast_2"]
        def Xform "Keyboard1" (
            active = true
        )
        {
            reorder nameChildren = ["AudioLibrary", "SpatialAudio", "Sphere"]
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-2.5170588, 1.0638831, 2.776557)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Keyboard_1.wav"]
                    rel values = </Root/Keyboard/Keyboard_1_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 1
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Keyboard1/Sphere/DefaultMaterial>
                double radius = 0.1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Keyboard1/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "Keyboard2" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (3.2823963, 1.0624, 5.6631346)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Keyboard_2.wav"]
                    rel values = </Root/Keyboard/Keyboard_2_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Keyboard2/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Keyboard2/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "Beaker" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, -2.7459123, 0)
            }
        )
        {
            quatf xformOp:orient = (-0.19655196, 0, 0.9804934, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-2.7969317, 1.0624144, -4.588374)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Beaker_Stir_wav"]
                    rel values = </Root/Beaker_Stir_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 1
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Beaker/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Beaker/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "Paperwork1" (
            active = true
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-2.618711, 1.0624, 3.7925618)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Paperwork_1.wav"]
                    rel values = </Root/Paperwork_1_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Paperwork1/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Paperwork1/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "Paperwork1_1" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (2.4739513, 1.0624, -7.636178)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Paperwork_2.wav"]
                    rel values = </Root/Paperwork_2_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Paperwork1_1/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Paperwork1_1/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "Beaker_1" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, 2.8231444, 0)
            }
        )
        {
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (0.15855207, 0, 0.98735064, 0)
            float3 xformOp:scale = (1.2165897, 1.2165897, 1.2165897)
            float3 xformOp:translate = (3.2390375, 1.0624, -4.7766614)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Beaker_Stir_wav"]
                    rel values = </Root/Beaker_Stir_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 1
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Beaker_1/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Beaker_1/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "Keyboard3" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (40, 40)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-2.397275, 1.0624, 5.6631346)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Keyboard_3.wav"]
                    rel values = </Root/Keyboard/Keyboard_3_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 1
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Keyboard3/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Keyboard3/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "Keyboard4" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (60, 60)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (2.828649, 1.0624, -5.119269)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Keyboard_4.wav"]
                    rel values = </Root/Keyboard/Keyboard_4_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 1
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Keyboard4/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Keyboard4/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "Keyboard5" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, 3.253309, 0)
            }
        )
        {
            float2 ui:nodegraph:node:pos = (80, 80)
            int ui:nodegraph:node:stackingOrder = 4
            quatf xformOp:orient = (-0.05582905, 0, 0.9984404, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-0.62501574, 0.8452301, -5.023866)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Keyboard_5_wav"]
                    rel values = </Root/Keyboard/Keyboard_5_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 1
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Keyboard5/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Keyboard5/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "conversation" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (40, 40)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0.62301207, 1.0624, 7.9822273)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Conversation_1.wav"]
                    rel values = </Root/Conversation_1_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 1
                float gain = 0
                uniform token info:id = "RealityKit.SpatialAudio"
                float rolloffFactor = 0.5184177
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Keyboard2_1/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Keyboard2_1/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "conversation2" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, -2.7459123, 0)
            }
        )
        {
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (-0.1965519, 0, 0.9804934, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-3.7310047, 1.0624144, -6.8245544)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Conversation_2.wav"]
                    rel values = </Root/Conversation_2_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 1
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Beaker_2/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Beaker_2/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "ventHood" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (60, 60)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0.62301207, 3.0708542, 9.071363)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Vent_Hood_wav"]
                    rel values = </Root/Vent_Hood_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 1
                float gain = 0
                uniform token info:id = "RealityKit.SpatialAudio"
                float rolloffFactor = 1
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Keyboard2_1/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Keyboard2_1/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "computer1" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (40, 40)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0.3636794, 1.0624, 3.224891)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Computer_wav"]
                    rel values = </Root/Computer_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Paperwork1_2/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Paperwork1_2/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "printer" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, 1.0740715, 0)
            }
        )
        {
            reorder nameChildren = ["AudioLibrary", "SpatialAudio", "Sphere"]
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (0.8592291, 0, 0.5115913, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (3.4589975, 1.0638831, 1.8534026)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Printer_1_wav"]
                    rel values = </Root/Printer_1_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 1
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Keyboard1_1/Sphere/DefaultMaterial>
                double radius = 0.1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Keyboard1_1/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "filingCabinet" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, -2.7459123, 0)
            }
        )
        {
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (-0.1965519, 0, 0.9804934, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-0.5412787, 1.0624095, -7.5261087)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["Filing_Cabinet_wav"]
                    rel values = </Root/Filing_Cabinet_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 1
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Beaker_2/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Beaker_2/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "podcast_1" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, -0.0821432, 0)
            }
        )
        {
            float2 ui:nodegraph:node:pos = (40, 40)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (0.9991567, 0, -0.04106006, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-0.37682295, 1.2350073, 8.017498)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["ADC_podcast_01_wav"]
                    rel values = </Root/podcastVO/ADC_podcast_01_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 0.9836503
                float gain = -12
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Keyboard2_1/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Keyboard2_1/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "podcast_2" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, -0.0821432, 0)
            }
        )
        {
            float2 ui:nodegraph:node:pos = (60, 60)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (0.9991567, 0, -0.041059252, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-1.085271, 1.2350073, 4.1596107)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["ADC_podcast_02_wav"]
                    rel values = </Root/podcastVO/ADC_podcast_02_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 0.9836503
                float gain = -12
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Keyboard2_1/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Keyboard2_1/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "podcast_3" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, -2.6493876, 0)
            }
        )
        {
            float2 ui:nodegraph:node:pos = (80, 80)
            int ui:nodegraph:node:stackingOrder = 4
            quatf xformOp:orient = (0.24362567, 0, -0.96986926, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-2.7876472, 1.2350073, -6.7675085)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["ADC_podcast_03_wav"]
                    rel values = </Root/podcastVO/ADC_podcast_03_wav>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 0.9836503
                float gain = -12
                uniform token info:id = "RealityKit.SpatialAudio"
            }

            def Sphere "Sphere" (
                active = false
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/AUDIO_transforms/Keyboard2_1/Sphere/DefaultMaterial>
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/AUDIO_transforms/Keyboard2_1/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (0.427, 1, 0.269) (
                            colorSpace = "srgb_texture"
                        )
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }
    }

    def RealityKitComponent "AudioMixGroups"
    {
        uniform token info:id = "RealityKit.AudioMixGroups"

        def RealityKitAudioMixGroup "keyboard"
        {
            float gain = -22.19553
            bool mute = 0
            float speed = 1
        }

        def RealityKitAudioMixGroup "conversation"
        {
            float gain = -16.91875
            bool mute = 0
            float speed = 1
        }

        def RealityKitAudioMixGroup "beakers"
        {
            float gain = -11.648877
            bool mute = 0
            float speed = 1
        }

        def RealityKitAudioMixGroup "Paperwork"
        {
            float gain = -20.49779
            bool mute = 0
            float speed = 1
        }

        def RealityKitAudioMixGroup "ambience"
        {
            float gain = 0
            bool mute = 0
            float speed = 1
        }

        def RealityKitAudioMixGroup "podcast"
        {
            float gain = -18.35831
            bool mute = 0
            float speed = 1
        }
    }

    def RealityKitTimeline "keyboards"
    {
        reorder nameChildren = ["Track", "Track2", "Track3", "Track4", "Track5", "Track6", "Track7", "Track8", "Track9", "Track10"]
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "Keyboard_1.wav"
                bool controlPlayback = 1
                double duration = 45
                uniform token info:id = "6A424929-C24F-472D-B76B-1021F03F0F1A"
                double loopCount = 0
                double startTime = 0
                rel target = </Root/AUDIO_transforms/Keyboard1>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "Keyboard_2.wav"
                bool controlPlayback = 1
                double duration = 45
                uniform token info:id = "D273B269-69B9-4E13-B986-1F34E2688D77"
                double loopCount = 0
                double startTime = 0
                rel target = </Root/AUDIO_transforms/Keyboard2>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track3"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "Keyboard_3.wav"
                bool controlPlayback = 1
                double duration = 45
                uniform token info:id = "4D59EF97-471F-4F35-8BCE-60CF93B4CA9D"
                double loopCount = 0
                double startTime = 0
                rel target = </Root/AUDIO_transforms/Keyboard3>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track4"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "Keyboard_4.wav"
                bool controlPlayback = 1
                double duration = 45
                uniform token info:id = "F24E16B5-A610-49B6-AF2B-01CFC6F17138"
                double loopCount = 0
                double startTime = 0
                rel target = </Root/AUDIO_transforms/Keyboard4>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track5"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "Keyboard_5_wav"
                bool controlPlayback = 1
                double duration = 45.92
                uniform token info:id = "9606F546-A4A4-44CB-B126-0061B447F437"
                double loopCount = 0
                double startTime = 0
                rel target = </Root/AUDIO_transforms/Keyboard5>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track6"
        {
        }

        def RealityKitTrack "Track7"
        {
        }

        def RealityKitTrack "Track8"
        {
        }

        def RealityKitTrack "Track9"
        {
        }

        def RealityKitTrack "Track10"
        {
        }
    }

    def RealityKitTimeline "MasterAudio"
    {
        reorder nameChildren = ["Track", "Track2", "Track3", "Track4", "Track5", "Track6"]
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = inf
                uniform token info:id = "9F6E5CA0-059C-40A1-BE0C-17CDF8DB1014"
                double startTime = 0
                rel timeline = </Root/keyboards>
            }
        }

        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 180.05333333333334
                uniform token info:id = "BA734F9E-FDE1-45CD-A001-453609EFEC43"
                double startTime = 0
                rel timeline = </Root/conversation>
            }
        }

        def RealityKitTrack "Track3"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 45
                uniform token info:id = "B2BD9233-0355-49D5-9F5E-37B60CA0CD4A"
                double loopCount = 0
                double startTime = 0
                rel timeline = </Root/venthood>
            }
        }

        def RealityKitTrack "Track4"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 45
                uniform token info:id = "692830BA-1CB2-47A1-9F93-339B80432A28"
                double loopCount = 0
                double startTime = 0
                rel timeline = </Root/paperwork>
            }
        }

        def RealityKitTrack "Track5"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 45.92
                uniform token info:id = "6BF65B15-E9E9-4E68-B610-D23E244EDE8E"
                double loopCount = 0
                double startTime = 0
                rel timeline = </Root/computer_printer_filingCabinet>
            }
        }

        def RealityKitTrack "Track6"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 45.92
                uniform token info:id = "292050F3-84A7-4BE1-8BA7-35110395DE96"
                double loopCount = 0
                double startTime = 0
                rel timeline = </Root/Ambience>
            }
        }
    }

    def RealityKitComponent "RCP_BehaviorsContainer"
    {
        rel behaviors = </Root/OnAddedToScene>
        uniform token info:id = "RCP.BehaviorsContainer"
    }

    def Preliminary_Behavior "OnAddedToScene"
    {
        rel actions = </Root/OnAddedToScene/Action>
        uniform bool exclusive
        rel triggers = </Root/OnAddedToScene/Trigger>

        def Preliminary_Trigger "Trigger"
        {
            rel affectedObjects = </Root>
            token info:id = "SceneTransition"
        }

        def Preliminary_Action "Action"
        {
            rel affectedObjects = </Root>
            rel animationLibraryKey = </Root/MasterAudio>
            rel animationLibraryKeyOverrideKey = </Root/OnAddedToScene/Trigger>
            token info:id = "PlayTimeline"
            int loops = 0
            int performCount = 1
            token type = "serial"
        }
    }

    def Xform "Keyboard" (
        active = true
    )
    {
        def RealityKitAudioFile "Keyboard_1_wav"
        {
            uniform asset file = @Audio/Lab_Ambience/Keyboard_1.wav@
            uniform token loadingStrategy = "Stream"
            rel mixGroup = </Root/AudioMixGroups/keyboard>
            uniform bool shouldLoop = 1
            uniform bool shouldRandomizeStartTime = 1
        }

        def RealityKitAudioFile "Keyboard_2_wav"
        {
            uniform asset file = @Audio/Lab_Ambience/Keyboard_2.wav@
            uniform token loadingStrategy = "Stream"
            rel mixGroup = </Root/AudioMixGroups/keyboard>
            uniform bool shouldLoop = 1
            uniform bool shouldRandomizeStartTime = 1
        }

        def RealityKitAudioFile "Keyboard_3_wav"
        {
            uniform asset file = @Audio/Lab_Ambience/Keyboard_3.wav@
            uniform token loadingStrategy = "Stream"
            rel mixGroup = </Root/AudioMixGroups/keyboard>
            uniform bool shouldLoop = 1
            uniform bool shouldRandomizeStartTime = 1
        }

        def RealityKitAudioFile "Keyboard_4_wav"
        {
            uniform asset file = @Audio/Lab_Ambience/Keyboard_4.wav@
            uniform token loadingStrategy = "Stream"
            rel mixGroup = </Root/AudioMixGroups/keyboard>
            uniform bool shouldLoop = 1
            uniform bool shouldRandomizeStartTime = 1
        }

        def RealityKitAudioFile "Keyboard_5_wav"
        {
            uniform asset file = @Audio/Lab_Ambience/Keyboard_5.wav@
            uniform token loadingStrategy = "Stream"
            rel mixGroup = </Root/AudioMixGroups/keyboard>
            uniform bool shouldLoop = 1
            uniform bool shouldRandomizeStartTime = 1
        }
    }

    def RealityKitAudioFile "Conversation_1_wav"
    {
        uniform asset file = @Audio/Lab_Ambience/Conversation_1.wav@
        uniform token loadingStrategy = "Stream"
        rel mixGroup = </Root/AudioMixGroups/conversation>
        uniform bool shouldLoop = 1
    }

    def RealityKitAudioFile "Conversation_2_wav"
    {
        uniform asset file = @Audio/Lab_Ambience/Conversation_2.wav@
        uniform token loadingStrategy = "Stream"
        rel mixGroup = </Root/AudioMixGroups/conversation>
        uniform bool shouldLoop = 1
    }

    def RealityKitTimeline "conversation"
    {
        reorder nameChildren = ["Track", "Track_3", "Track_2", "Track_1", "Track2", "Track3", "Track4"]
        def RealityKitTrack "Track"
        {
            reorder nameChildren = ["Play_Audio", "Play_Audio_1", "beaker2", "Play_Audio_3", "Play_Audio_4"]
            def RealityKitAction "beaker2"
            {
                string actionKind = "audio"
                string audioResourceName = "Beaker_Stir_wav"
                bool controlPlayback = 1
                double duration = 45.92
                uniform token info:id = "43DCF0F8-BF68-4E95-A490-30BDFDC7141D"
                double startTime = 0
                rel target = </Root/AUDIO_transforms/Beaker_1>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track_1"
        {
            def RealityKitAction "conversation2"
            {
                string actionKind = "audio"
                string audioResourceName = "Conversation_2.wav"
                bool controlPlayback = 1
                double duration = 45
                uniform token info:id = "4B3F22A9-8A93-4EB8-9DFE-5D719D955DE6"
                double startTime = 0
                rel target = </Root/AUDIO_transforms/conversation2>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track_2"
        {
            def RealityKitAction "conversation"
            {
                string actionKind = "audio"
                string audioResourceName = "Conversation_1.wav"
                bool controlPlayback = 1
                double duration = 45
                uniform token info:id = "299EE60A-254A-4B72-95BA-8ADD06BF850A"
                double startTime = 0
                rel target = </Root/AUDIO_transforms/conversation>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track_3"
        {
            def RealityKitAction "beaker1"
            {
                string actionKind = "audio"
                string audioResourceName = "Beaker_Stir_wav"
                bool controlPlayback = 1
                double duration = 45.92
                uniform token info:id = "34D4FA76-CEBA-48B0-96CD-F62EC9259EA3"
                double startTime = 0
                rel target = </Root/AUDIO_transforms/Beaker>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track2"
        {
            def RealityKitAction "podcast1"
            {
                string actionKind = "audio"
                string audioResourceName = "ADC_podcast_01_wav"
                bool controlPlayback = 1
                double duration = 179.968
                double gain = -8
                uniform token info:id = "4775C84C-CD6A-4F21-8BA0-E1909AEA0A12"
                double startTime = 0
                rel target = </Root/AUDIO_transforms/podcast_1>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track3"
        {
            def RealityKitAction "podcast2"
            {
                string actionKind = "audio"
                string audioResourceName = "ADC_podcast_02_wav"
                bool controlPlayback = 1
                double duration = 179.968
                uniform token info:id = "5D2553B2-4B02-4EC5-8FB0-DF293018C0DC"
                double startTime = 0
                rel target = </Root/AUDIO_transforms/podcast_2>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track4"
        {
            def RealityKitAction "podcast3"
            {
                string actionKind = "audio"
                string audioResourceName = "ADC_podcast_03_wav"
                bool controlPlayback = 1
                double duration = 180.05333333333334
                uniform token info:id = "8EBD3247-8703-4C80-BE04-794C04FD2AF8"
                double startTime = 0
                rel target = </Root/AUDIO_transforms/podcast_3>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def RealityKitAudioFile "Paperwork_1_wav"
    {
        uniform asset file = @Audio/Lab_Ambience/Paperwork_1.wav@
        rel mixGroup = </Root/AudioMixGroups/Paperwork>
        uniform bool shouldLoop = 1
    }

    def RealityKitAudioFile "Paperwork_2_wav"
    {
        uniform asset file = @Audio/Lab_Ambience/Paperwork_2.wav@
        rel mixGroup = </Root/AudioMixGroups/Paperwork>
        uniform bool shouldLoop = 1
    }

    def RealityKitAudioFile "Printer_1_wav"
    {
        uniform asset file = @Audio/Lab_Ambience/Printer_1.wav@
        uniform bool shouldLoop = 1
    }

    def RealityKitTimeline "venthood"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "Vent_Hood_wav"
                bool controlPlayback = 1
                double duration = 45.92
                uniform token info:id = "196D8001-44BE-47DA-9BB2-DC7140931904"
                double startTime = 0
                rel target = </Root/AUDIO_transforms/ventHood>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def RealityKitAudioFile "Computer_wav"
    {
        uniform asset file = @Audio/Lab_Ambience/Computer.wav@
        rel mixGroup = </Root/AudioMixGroups/keyboard>
        uniform bool shouldLoop = 1
        uniform bool shouldRandomizeStartTime = 0
    }

    def RealityKitAudioFile "Filing_Cabinet_wav"
    {
        uniform asset file = @Audio/Lab_Ambience/Filing_Cabinet.wav@
        uniform bool shouldLoop = 1
        uniform bool shouldRandomizeStartTime = 0
    }

    def RealityKitAudioFile "Vent_Hood_wav"
    {
        uniform asset file = @Audio/Lab_Ambience/Vent_Hood.wav@
        uniform bool shouldLoop = 1
        uniform bool shouldRandomizeStartTime = 0
    }

    def RealityKitAudioFile "Beaker_Stir_wav"
    {
        uniform asset file = @Audio/Lab_Ambience/Beaker_Stir.wav@
        rel mixGroup = </Root/AudioMixGroups/beakers>
        uniform bool shouldLoop = 1
        uniform bool shouldRandomizeStartTime = 0
    }

    def RealityKitAudioFile "Room_Ambience_Quad_wav"
    {
        uniform asset file = @Audio/Lab_Ambience/Room Ambience Quad.wav@
        rel mixGroup = </Root/AudioMixGroups/ambience>
        uniform bool shouldLoop = 1
    }

    def RealityKitTimeline "paperwork"
    {
        reorder nameChildren = ["Track", "Track2"]
        def RealityKitTrack "Track"
        {
            reorder nameChildren = ["Play_Audio", "Play_Audio_12"]
            def RealityKitAction "Play_Audio_12"
            {
                string actionKind = "audio"
                string audioResourceName = "Paperwork_2.wav"
                bool controlPlayback = 1
                double duration = 45
                uniform token info:id = "8811FF61-44B8-4BA6-AD3F-1CB0DBA32AF2"
                double startTime = 0
                rel target = </Root/AUDIO_transforms/Paperwork1_1>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "Paperwork_1.wav"
                bool controlPlayback = 1
                double duration = 45
                uniform token info:id = "20F8D89F-D25A-445A-B51C-28B732008B0D"
                double startTime = 0
                rel target = </Root/AUDIO_transforms/Paperwork1>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def RealityKitTimeline "computer_printer_filingCabinet"
    {
        reorder nameChildren = ["Track", "Track_1", "Track2"]
        def RealityKitTrack "Track"
        {
            reorder nameChildren = ["Play_Audio", "Play_Audio_12", "Play_Audio_2"]
            def RealityKitAction "Play_Audio_12"
            {
                string actionKind = "audio"
                string audioResourceName = "Filing_Cabinet_wav"
                bool controlPlayback = 1
                double duration = 45.92
                uniform token info:id = "0B35903A-EFDE-47B4-8F3C-69117FC604DA"
                double startTime = 0
                rel target = </Root/AUDIO_transforms/filingCabinet>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Play_Audio_2"
            {
                string actionKind = "audio"
                string audioResourceName = "Printer_1_wav"
                bool controlPlayback = 1
                double duration = 45
                uniform token info:id = "60D19918-88A0-4869-9CDE-7081AD24296D"
                double startTime = 0
                rel target = </Root/AUDIO_transforms/printer>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track_1"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "Computer_wav"
                bool controlPlayback = 1
                double duration = 45.92
                double gain = -30.050904977375566
                uniform token info:id = "3C612462-683A-448D-9A01-1363443A9C4E"
                double startTime = 0
                rel target = </Root/AUDIO_transforms/computer1>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def RealityKitTimeline "Ambience"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "Room_Ambience_Quad_wav"
                bool controlPlayback = 1
                double duration = 45.92
                uniform token info:id = "46EF03D8-7DC0-4550-B4ED-9A38FB502525"
                double startTime = 0
                rel target = </Root/AmbientAudio>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def Xform "AmbientAudio"
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 2.764145, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "AmbientAudio"
        {
            uniform token info:id = "RealityKit.AmbientAudio"
        }

        def RealityKitComponent "AudioLibrary"
        {
            uniform token info:id = "RealityKit.AudioLibrary"

            def RealityKitDict "resources"
            {
                string[] keys = ["Room_Ambience_Quad_wav"]
                rel values = </Root/Room_Ambience_Quad_wav>
            }
        }
    }

    def Xform "podcastVO" (
        active = true
    )
    {
        def RealityKitAudioFile "ADC_podcast_01_wav"
        {
            uniform asset file = @Audio/Lab_Ambience/split/ADC_podcast_01.wav@
            uniform bool shouldLoop = 0
        }

        def RealityKitAudioFile "ADC_podcast_02_wav"
        {
            uniform asset file = @Audio/Lab_Ambience/split/ADC_podcast_02.wav@
            uniform bool shouldLoop = 0
        }

        def RealityKitAudioFile "ADC_podcast_03_wav"
        {
            uniform asset file = @Audio/Lab_Ambience/split/ADC_podcast_03.wav@
            uniform bool shouldLoop = 0
        }
    }
}

